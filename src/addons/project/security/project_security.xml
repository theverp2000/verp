<?xml version="1.0" encoding="utf-8"?>
<verp>

    <record id="base.category_servicesProject" model="ir.module.category">
        <field name="description">Helps you manage your projects and tasks by tracking them, generating plannings, etc...</field>
        <field name="sequence">3</field>
    </record>

    <record id="groupProjectUser" model="res.groups">
        <field name="label">User</field>
        <field name="impliedIds" eval="[[4, refId('base.groupUser')]]"/>
        <field name="categoryId" ref="base.category_servicesProject"/>
    </record>

    <record id="groupProjectManager" model="res.groups">
        <field name="label">Administrator</field>
        <field name="categoryId" ref="base.category_servicesProject"/>
        <field name="impliedIds" eval="[[4, refId('groupProjectUser')]]"/>
        <field name="users" eval="[[4, refId('base.userRoot')], [4, refId('base.userAdmin')]]"/>
    </record>

    <record id="groupSubtaskProject" model="res.groups">
        <field name="label">Use Subtasks</field>
        <field name="categoryId" ref="base.category_hidden"/>
    </record>

    <record id="groupProjectRating" model="res.groups">
        <field name="label">Use Rating on Project</field>
        <field name="categoryId" ref="base.category_hidden"/>
    </record>

    <record id="groupProjectStages" model="res.groups">
        <field name="label">Use Stages on Project</field>
        <field name="categoryId" ref="base.category_hidden"/>
    </record>

    <record id="groupProjectRecurringTasks" model="res.groups">
        <field name="label">Use Recurring Tasks</field>
        <field name="categoryId" ref="base.category_hidden"/>
    </record>

    <record id="groupProjectTaskDependencies" model="res.groups">
        <field name="label">Use Task Dependencies</field>
        <field name="categoryId" ref="base.category_hidden"/>
    </record>

<data noupdate="1">
    <record id="base.defaultUser" model="res.users">
        <field name="groupsId" eval="[[4, refId('project.groupProjectManager')]]"/>
    </record>

    <record model="ir.rule" id="projectCompRule">
        <field name="label">Project: multi-company</field>
        <field name="modelId" ref="model_projectProject"/>
        <field name="domainForce">[['companyId', 'in', companyIds]]</field>
    </record>

    <record model="ir.rule" id="projectProjectManagerRule">
        <field name="label">Project: project manager: see all</field>
        <field name="modelId" ref="model_projectProject"/>
        <field name="domainForce">[[1, '=', 1]]</field>
        <field name="groups" eval="[[4, refId('project.groupProjectManager')]]"/>
    </record>

    <record model="ir.rule" id="projectPublicMembersRule">
        <field name="label">Project: employees: following required for follower-only projects</field>
        <field name="modelId" ref="model_projectProject"/>
        <field name="domainForce">['|',
                                        ['privacyVisibility', '!=', 'followers'],
                                        ['messagePartnerIds', 'in', [(await user.partnerId).id]]
                                    ]</field>
        <field name="groups" eval="[[4, refId('base.groupUser')]]"/>
    </record>

    <record model="ir.rule" id="taskCompRule">
        <field name="label">Project/Task: multi-company</field>
        <field name="modelId" ref="model_projectTask"/>
        <field name="domainForce">[['companyId', 'in', companyIds]]</field>
    </record>

    <record model="ir.rule" id="taskVisibilityRule">
        <field name="label">Project/Task: employees: follow required for follower-only projects</field>
        <field name="modelId" ref="model_projectTask"/>
        <field name="domainForce">[
            '|',
                '&amp;',
                    ['projectId', '!=', false],
                    '|',
                        ['projectId.privacyVisibility', '!=', 'followers'],
                        ['projectId.messagePartnerIds', 'in', [(await user.partnerId).id]],
                '|',
                    ['messagePartnerIds', 'in', [(await user.partnerId).id]],
                    // to subscribe check access to the record, follower is not enough at creation
                    ['userIds', 'in', user.id]
        ]</field>
        <field name="groups" eval="[[4, refId('base.groupUser')]]"/>
    </record>

    <record model="ir.rule" id="projectManagerAllProjectTasksRule">
        <field name="label">Project/Task: project manager: see all</field>
        <field name="modelId" ref="model_projectTask"/>
        <field name="domainForce">[[1, '=', 1]]</field>
        <field name="groups" eval="[[4, refId('project.groupProjectManager')]]"/>
    </record>

    <record model="ir.rule" id="taskTypeManagerRule">
        <field name="label">Project/Task Type: manager sees all</field>
        <field name="modelId" ref="model_projectTaskType"/>
        <field name="domainForce">[[1, '=', 1]]</field>
        <field name="groups" eval="[[4, refId('project.groupProjectManager')]]"/>
    </record>

    <record model="ir.rule" id="taskTypeVisibilityRule">
        <field name="label">Project/Task Type: see own or unowned stages</field>
        <field name="modelId" ref="model_projectTaskType"/>
        <field name="domainForce">[['userId', 'in', [false, user.id]]]</field>
    </record>

    <record model="ir.rule" id="taskTypeOwnWriteRule">
        <field name="label">Project/Task Type: write own stages</field>
        <field name="modelId" ref="model_projectTaskType"/>
        <field name="domainForce">[['userId', '=', user.id]]</field>
        <field name="permRead" eval="false"/>
        <field name="permWrite" eval="true"/>
        <field name="permCreate" eval="true"/>
        <field name="permUnlink" eval="true"/>
        <field name="groups" eval="[[4, refId('project.groupProjectUser')]]"/>
    </record>

    <record model="ir.rule" id="reportProjectTaskUserReportCompRule">
        <field name="label">Task Analysis multi-company</field>
        <field name="modelId" ref="model_reportProjectTaskUser"/>
        <field name="domainForce">[['companyId', 'in', companyIds]]</field>
    </record>

    <record id="irRuleProjectPersonalStageMy" model="ir.rule">
        <field name="label">Project: See my own personal stage</field>
        <field name="modelId" ref="project.model_projectTaskStagePersonal"/>
        <field name="domainForce">[['userId', '=', user.id]]</field>
    </record>

    <record id="irRulePrivateTask" model="ir.rule">
        <field name="label">Project: See private tasks</field>
        <field name="modelId" ref="project.model_projectTask"/>
        <field name="domainForce">[
            ['projectId.privacyVisibility', '!=', 'followers'],
            '|', '|', ['projectId', '!=', false],
                      ['parentId', '!=', false],
                 ['userIds', 'in', user.id],
        ]</field>
        <field name="groups" eval="[[4, refId('project.groupProjectUser')]]"/>
    </record>

     <!-- Portal -->
    <record id="projectProjectRulePortal" model="ir.rule">
        <field name="label">Project: portal users: portal and following</field>
        <field name="modelId" ref="project.model_projectProject"/>
        <field name="domainForce">[
            '&amp;',
                ['privacyVisibility', '=', 'portal'],
                ['messagePartnerIds', 'childOf', [(await (await user.partnerId).commercialPartnerId).id]],
        ]</field>
        <field name="groups" eval="[[4, refId('base.groupPortal')]]"/>
    </record>

    <record id="projectCollaboratorRulePortal" model="ir.rule">
        <field name="label">Project/Collaborator: portal users: can only see his own collobaroration in shared projects</field>
        <field name="modelId" ref="project.model_projectCollaborator"/>
        <field name="domainForce">[
            ['projectId.privacyVisibility', '=', 'portal'],
            ['partnerId', '=', (await user.partnerId).id],
        ]</field>
        <field name="groups" eval="[[4, refId('base.groupPortal')]]"/>
    </record>

    <record id="projectTaskRulePortal" model="ir.rule">
        <field name="label">Project/Task: portal users: (portal and following project) or (portal and following task)</field>
        <field name="modelId" ref="project.model_projectTask"/>
        <field name="domainForce">[
        ['projectId.privacyVisibility', '=', 'portal'],
        ['active', '=', true],
        '|',
            ['projectId.messagePartnerIds', 'childOf', [(await (await user.partnerId).commercialPartnerId).id]],
            ['messagePartnerIds', 'childOf', [(await (await user.partnerId).commercialPartnerId).id]],
        ]</field>
        <field name="permRead" eval="true"/>
        <field name="permWrite" eval="false"/>
        <field name="permCreate" eval="false"/>
        <field name="permUnlink" eval="false"/>
        <field name="groups" eval="[[4, refId('base.groupPortal')]]"/>
    </record>

    <record id="projectTaskRulePortalProjectSharing" model="ir.rule">
        <field name="label">Project/Task: portal users: portal user can edit with project sharing feature</field>
        <field name="modelId" ref="project.model_projectTask"/>
        <field name="active">0</field>
        <field name="domainForce">[
            ['projectId.privacyVisibility', '=', 'portal'],
            ['active', '=', true],
            '|',
                ['projectId.messagePartnerIds', 'childOf', [(await (await user.partnerId).commercialPartnerId).id]],
                ['messagePartnerIds', 'childOf', [(await (await user.partnerId).commercialPartnerId).id]],
            ['projectId.collaboratorIds.partnerId', 'in', [user.partnerId.id]],
        ]</field>
        <field name="groups" eval="[[4, refId('base.groupPortal')]]"/>
        <field name="permRead" eval="false"/>
        <field name="permWrite" eval="true"/>
        <field name="permCreate" eval="true"/>
        <field name="permUnlink" eval="false"/>
    </record>

    <record model="ir.rule" id="update_comp_rule">
        <field name="label">Project/Updates: multi-company</field>
        <field name="modelId" ref="model_projectUpdate"/>
        <field name="domainForce">[['projectId.companyId', 'in', companyIds]]</field>
    </record>

    <record model="ir.rule" id="update_visibility_rule">
        <field name="label">Project/Update: employees: follow required for follower-only projects</field>
        <field name="modelId" ref="model_projectUpdate"/>
        <field name="domainForce">[
        '|',
            ['projectId.privacyVisibility', '!=', 'followers'],
            '|',
                ['projectId.messagePartnerIds', 'in', [(await user.partnerId).id]],
                '|',
                    ['userId', '=', user.id],
                    ['projectId.userId', '=', user.id]
        ]</field>
        <field name="groups" eval="[[4, refId('base.groupUser')]]"/>
    </record>

    <record id="updateVisibilityProjectAdmin" model="ir.rule">
        <field name="label">Project updates : Project user can see all project updates</field>
        <field name="modelId" ref="project.model_projectUpdate"/>
        <field name="domainForce">[[1, '=', 1]]</field>
        <field name="groups" eval="[[4, refId('project.groupProjectManager')]]"/>
    </record>

    <record model="ir.rule" id="milestoneCompRule">
        <field name="label">Project/Milestone: multi-company</field>
        <field name="modelId" ref="model_projectMilestone"/>
        <field name="domainForce">[['projectId.companyId', 'in', companyIds]]</field>
    </record>

    <record model="ir.rule" id="milestone_visibility_rule">
        <field name="label">Project/Milestone: employees: follow required for follower-only projects</field>
        <field name="modelId" ref="model_projectMilestone"/>
        <field name="domainForce">[
        '|',
            ['projectId.privacyVisibility', '!=', 'followers'],
            '|',
                ['projectId.messagePartnerIds', 'in', [(await user.partnerId).id]],
                ['projectId.userId', '=', user.id],
        ]</field>
        <field name="groups" eval="[[4, refId('base.groupUser')]]"/>
    </record>

    <record id="milestoneVisibilityProjectAdmin" model="ir.rule">
        <field name="label">Project/Milestone: Project manager can see all project milestones</field>
        <field name="modelId" ref="project.model_projectMilestone"/>
        <field name="domainForce">[[1, '=', 1]]</field>
        <field name="groups" eval="[[4, refId('project.groupProjectManager')]]"/>
    </record>
</data>
</verp>
